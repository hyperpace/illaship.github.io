<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>[DataStructure_003]덱(Deque)</title>
      <link href="/2018/03/12/%5BDataStructure_003%5D%EB%8D%B1(Deque)/"/>
      <content type="html"><![CDATA[<p><img src="/images/dataStr/Deque.png" alt="Deque"></p><h1 id="덱-소개"><a href="#덱-소개" class="headerlink" title="덱 소개"></a>덱 소개</h1><ul><li>양 끝에서 자료를 삽입과 삭제를 할 수 있는 자료구조입니다.</li><li>큐와 다르게 양 끝에서 삽입과 삭제가 가능하므로 Double-ended queue라고 부릅니다.</li></ul><a id="more"></a><p><br></p><h1 id="덱-연산"><a href="#덱-연산" class="headerlink" title="덱 연산"></a>덱 연산</h1><table><thead><tr><th>함수</th><th>설명</th></tr></thead><tbody><tr><td>push_front</td><td>덱의 앞에 자료를 삽입하는 연산.</td></tr><tr><td>push_back</td><td>덱의 뒤에 자료를 삽입하는 연산.</td></tr><tr><td>pop_front</td><td>덱의 앞에서 자료를 삭제하는 연산.</td></tr><tr><td>pop_back</td><td>덱의 뒤에서 자료를 삭제하는 연산.</td></tr><tr><td>front</td><td>덱의 가장 앞에 있는 자료를 보는 연산.</td></tr><tr><td>back</td><td>덱의 가장 뒤에 있는 자료를 보는 연산.</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> basics </category>
          
          <category> DataStructure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DataStructure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[DataStructure_002]큐(Queue)</title>
      <link href="/2018/03/12/%5BDataStructure_002%5D%ED%81%90(Queue)/"/>
      <content type="html"><![CDATA[<p><img src="/images/dataStr/Queue.png" alt="Queue"></p><h1 id="큐-소개"><a href="#큐-소개" class="headerlink" title="큐 소개"></a>큐 소개</h1><ul><li>한쪽 끝에서만 자료를 삽입하고 반대 쪽 끝에서만 삭제할 수 있는 자료구조입니다.</li><li>먼저 넣은 것이 가장 먼저 나오기 때문에 First In First Out(FIFO)라고도 부릅니다.</li></ul><a id="more"></a><p><br></p><h1 id="큐-연산"><a href="#큐-연산" class="headerlink" title="큐 연산"></a>큐 연산</h1><table><thead><tr><th>함수</th><th>설명</th></tr></thead><tbody><tr><td>push</td><td>큐에 자료를 삽입하는 연산.</td></tr><tr><td>pop</td><td>큐에서 자료를 삭제하는 연산</td></tr><tr><td>front</td><td>큐의 가장 앞(가장 먼저 삽입)에 있는 자료를 보는 연산.</td></tr><tr><td>back</td><td>큐에서 가장 뒤(가장 나중에 삽입)에 있는 자료를 보는 연산.</td></tr><tr><td>empty</td><td>큐가 비어 있는지 아닌지 보는 연산.</td></tr><tr><td>size</td><td>큐에 저장되어있는 자료의 개수를 보는 연산.</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> basics </category>
          
          <category> DataStructure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DataStructure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[DataStructure_001]스택(Stack)</title>
      <link href="/2018/03/12/%5BDataStructure_001%5D%EC%8A%A4%ED%83%9D(Stack)/"/>
      <content type="html"><![CDATA[<p><img src="/images/dataStr/stack.png" alt="Stack"></p><h1 id="스택-소개"><a href="#스택-소개" class="headerlink" title="스택 소개"></a>스택 소개</h1><ul><li>한쪽 끝에서만 자료를 삽입, 삭제할 수 있는 자료구조입니다.</li><li>마지막에 넣은것이 가장 먼저 나오기 때문에, Last in First Out(LIFO)라고도 부릅니다.</li></ul><a id="more"></a><p><br></p><h1 id="스택-연산"><a href="#스택-연산" class="headerlink" title="스택 연산"></a>스택 연산</h1><table><thead><tr><th>함수</th><th>설명</th></tr></thead><tbody><tr><td>push</td><td>스택에 자료를 삽입하는 연산</td></tr><tr><td>pop</td><td>스택에서 자료를 삭제하는 연산</td></tr><tr><td>top</td><td>스택의 가장 위에 있는 자료를 보는 연산.</td></tr><tr><td>empty</td><td>스택이 비어 있는지 아닌지를 알아보는 연산.</td></tr><tr><td>size</td><td>스택에 저장되어있는 자료의 개수를 알아보는 연산.</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> basics </category>
          
          <category> DataStructure </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DataStructure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[Algorithm_002]그대로 출력하기</title>
      <link href="/2018/03/12/%5BAlgorithm_002%5D%EA%B7%B8%EB%8C%80%EB%A1%9C%20%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/"/>
      <content type="html"><![CDATA[<h1 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h1><ul><li>입력 받은 대로 출력하는 프로그램을 작성하시오.</li></ul><h1 id="입력"><a href="#입력" class="headerlink" title="입력"></a>입력</h1><ul><li>알파벳 소문자, 대문자, 공백, 숫자로만 이루어져 있다.</li><li>각 줄은 100글자를 넘지 않으며, 빈 줄이 주어질 수도 있고, 각 줄의 앞 뒤에 공백이 있을 수도 있다.</li></ul><h1 id="출력"><a href="#출력" class="headerlink" title="출력"></a>출력</h1><ul><li>입력받은 그대로 출력한다.</li></ul><h1 id="출처"><a href="#출처" class="headerlink" title="출처"></a>출처</h1><ul><li><a href="https://www.acmicpc.net/problem/11719" target="_blank" rel="noopener">백준온라인저지-11719번-그대로출력하기2</a><br>(<a href="https://www.acmicpc.net/problem/11719" target="_blank" rel="noopener">https://www.acmicpc.net/problem/11719</a>)</li></ul><a id="more"></a><p><br></p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><blockquote><h2 id="방법1-getchar-이용"><a href="#방법1-getchar-이용" class="headerlink" title="방법1 - getchar() 이용"></a>방법1 - getchar() 이용</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) &amp;&amp; c != EOF) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><h2 id="방법2-getline-이용"><a href="#방법2-getline-이용" class="headerlink" title="방법2 - getline() 이용"></a>방법2 - getline() 이용</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">while</span> (getline(<span class="built_in">cin</span>, str)) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p><br></p><h1 id="주의사항"><a href="#주의사항" class="headerlink" title="주의사항"></a>주의사항</h1><ul><li><code>scanf(&quot;%s&quot;,s);</code>, <code>cin &gt;&gt; s;</code>은 <strong>빈칸으로 시작</strong>하거나 <strong>빈칸이 포함</strong>되는 온전한 한줄을 입력받지 못한다.</li><li><code>fgets(s, 100, stdin);</code>는 <strong>줄바꿈까지 입력받기</strong> 때문에, 주의한다.</li><li><code>scanf(&quot;%[^\n]\n&quot;, s);</code>는 <strong>줄바꿈을 입력받지 않기</strong> 때문에 좋지만, <strong>각 줄의 앞 뒤에 있는 공백은 무시하고 입력</strong>을 받는다.<br>즉, <strong>빈줄을 받을 수 없고, 공백으로 시작하는 줄을 받을 수 없다.</strong></li></ul>]]></content>
      
      <categories>
          
          <category> basics </category>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[Algorithm_001]알고리즘 소개</title>
      <link href="/2018/03/12/%5BAlgorithm_001%5D%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%20%EC%86%8C%EA%B0%9C/"/>
      <content type="html"><![CDATA[<h1 id="알고리즘-소개"><a href="#알고리즘-소개" class="headerlink" title="알고리즘 소개"></a>알고리즘 소개</h1><ul><li><strong>어떠한 문제를 해결하기위한 여러 동작들의 모임입니다.</strong></li></ul><a id="more"></a><p><br></p><h1 id="시간복잡도-O-개념"><a href="#시간복잡도-O-개념" class="headerlink" title="시간복잡도(O) 개념"></a>시간복잡도(O) 개념</h1><ul><li><strong>시간복잡도는 입력의 크기에 대해서 최악의 경우 시간이 얼마나 걸릴지 나타내는 방법입니다.</strong></li></ul><blockquote><h2 id="대표적인-시간-복잡도"><a href="#대표적인-시간-복잡도" class="headerlink" title="대표적인 시간 복잡도"></a>대표적인 시간 복잡도</h2><table><thead><tr><th style="text-align:left">시간복잡도</th><th style="text-align:left">설명</th></tr></thead><tbody><tr><td style="text-align:left"><strong>Ο(1)</strong></td><td style="text-align:left">단순계산을 할 경우 ex) 배열에 접근하는 연산, a/b와 같은 연산.</td></tr><tr><td style="text-align:left"><strong>Ο(logN)</strong></td><td style="text-align:left">N개를 절반으로 계속 나눌경우</td></tr><tr><td style="text-align:left"><strong>Ο(N)</strong></td><td style="text-align:left">중복되지 않은 for문일 경우</td></tr><tr><td style="text-align:left"><strong>O(NlogN)</strong></td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><strong>Ο(N^2)</strong></td><td style="text-align:left">2중 for문일 경우</td></tr><tr><td style="text-align:left"><strong>Ο(N^3)</strong></td><td style="text-align:left">3중 for문일 경우</td></tr><tr><td style="text-align:left"><strong>Ο(2^N)</strong></td><td style="text-align:left">크기가 N인 집합의 부분집합</td></tr><tr><td style="text-align:left"><strong>Ο(N!)</strong></td><td style="text-align:left">크기가 N인 순열</td></tr></tbody></table></blockquote>]]></content>
      
      <categories>
          
          <category> basics </category>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[Hexo_03]테마설정</title>
      <link href="/2018/03/12/%5BHexo_03%5D%ED%85%8C%EB%A7%88%EC%84%A4%EC%A0%95/"/>
      <content type="html"><![CDATA[<h1 id="Hexo테마-설정"><a href="#Hexo테마-설정" class="headerlink" title="Hexo테마 설정"></a>Hexo테마 설정</h1><ul><li><strong>Hexo는 다양한 테마를 지원한다.</strong></li><li><strong>테마마다 설정방법이 조금씩 다르다.</strong></li></ul><a id="more"></a><p><br></p><h1 id="공통적인-테마-설정-방법"><a href="#공통적인-테마-설정-방법" class="headerlink" title="공통적인 테마 설정 방법"></a>공통적인 테마 설정 방법</h1><ul><li><strong>테마마다 설정방법이 조금씩 다르지만, 기본적인 설정방법은 같다.</strong></li></ul><ol><li><p><strong>github를 이용하여 테마를 다운받는다</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; git <span class="built_in">clone</span> &lt;hexo-theme의 github주소&gt; &lt;./themes/테마명&gt;</span><br><span class="line">&gt; git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next.git ./themes/next</span><br></pre></td></tr></table></figure></li><li><p><strong>테마는 ./theme/ 경로에 위치한다.</strong></p></li><li><strong>테마는 아래의 구조를 가진다.</strong><pre>.├── _config.yml     # 테마 설정 파일├── languages       # 테마 언어폴더(ko.yml)├── layout          # 사이트를 어떻게 보여줄지 정의한 폴더(.ejs/.swing)├── scripts         # javascript모음 폴더└── source          # 실제 ./public 폴더에 위치할 파일 모음</pre></li><li><strong>마음에 드는 테마의 Docs를 꼭 확인해서 설정한다</strong></li><li><strong>블로그 글을 작성한 뒤, <code>hexo d -g</code>명령어를 사용하여 githube에 <code>push</code>한다.</strong></li><li><strong><code>사용자이름.github.io</code> 주소로 접속해서 잘 배포되었는지 확인한다.(늦게 반영되는 경우도 있다.)</strong></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[Hexo_02]마크다운(markdown)</title>
      <link href="/2018/03/12/%5BHexo_02%5D%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4/"/>
      <content type="html"><![CDATA[<h1 id="마크다운-markdown-소개"><a href="#마크다운-markdown-소개" class="headerlink" title="마크다운(markdown) 소개"></a>마크다운(markdown) 소개</h1><ul><li><strong>마크다운(markdown)은 일반 텍스트 문서의 양식을 편집하는 문법이다.</strong></li><li><strong>마크다운을 이용해 작성된 문서는 쉽게 HTML 등 다른 문서형태로 변환이 가능하다.</strong></li></ul><a id="more"></a><p><br></p><h1 id="마크다운-작성법"><a href="#마크다운-작성법" class="headerlink" title="마크다운 작성법"></a>마크다운 작성법</h1><blockquote><h2 id="제목"><a href="#제목" class="headerlink" title="제목"></a>제목</h2></blockquote><pre># 제목1## 제목2### 제목3#### 제목4##### 제목5###### 제목6</pre><pre>큰 제목====================중간 제목---------------------</pre><p><br></p><blockquote><h2 id="인용"><a href="#인용" class="headerlink" title="인용"></a>인용</h2></blockquote><pre>> 인용1>> 인용1-1> 인용2</pre><p><br></p><blockquote><h2 id="이탤릭체"><a href="#이탤릭체" class="headerlink" title="이탤릭체"></a>이탤릭체</h2></blockquote><pre>*이탤릭체*_이탤릭체_</pre><p><br></p><blockquote><h2 id="볼드체"><a href="#볼드체" class="headerlink" title="볼드체"></a>볼드체</h2></blockquote><pre>**볼드체**__볼드체__</pre><p><br></p><blockquote><h2 id="링크"><a href="#링크" class="headerlink" title="링크"></a>링크</h2></blockquote><pre>[링크명](http://www.example.com)[링크명](http://www.example.com "사이트 제목")</pre><p><br></p><blockquote><h2 id="순서있는-리스트"><a href="#순서있는-리스트" class="headerlink" title="순서있는 리스트"></a>순서있는 리스트</h2></blockquote><pre>1. 첫 번째2. 두 번째3. 세 번째</pre><p><br></p><blockquote><h2 id="순서없는-리스트"><a href="#순서없는-리스트" class="headerlink" title="순서없는 리스트"></a>순서없는 리스트</h2></blockquote><pre>- 첫 번째    - 첫번째 -1+ 두 번째* 세 번째</pre><p><br></p><blockquote><h2 id="이미지"><a href="#이미지" class="headerlink" title="이미지"></a>이미지</h2></blockquote><pre>![이미지명](이미지 경로)</pre>]]></content>
      
      <categories>
          
          <category> git </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>[Hexo_01]소개 및 시작하기</title>
      <link href="/2018/03/11/%5BHexo_01%5D%EC%86%8C%EA%B0%9C%20%EB%B0%8F%20%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0/"/>
      <content type="html"><![CDATA[<h1 id="Hexo-소개"><a href="#Hexo-소개" class="headerlink" title="Hexo 소개"></a>Hexo 소개</h1><ul><li><strong><a href="https://hexo.io/ko/index.html" target="_blank" rel="noopener">Hexo</a>는 빠르고 간단하고 강력한 블로그 프레임워크입니다.</strong></li><li><strong>기본적인 <code>git</code>, <code>html</code>, <code>css</code>, <code>javaScript</code> 지식이 필요합니다.</strong></li></ul><a id="more"></a><p><br></p><h1 id="Hexo-설치-전-준비하기"><a href="#Hexo-설치-전-준비하기" class="headerlink" title="Hexo 설치 전 준비하기"></a>Hexo 설치 전 준비하기</h1><ul><li><strong>Hexo를 사용하기 위해 몇가지 준비사항이 있습니다.</strong><blockquote><h2 id="Node-js-설치"><a href="#Node-js-설치" class="headerlink" title="Node.js 설치"></a><strong>Node.js 설치</strong></h2></blockquote></li></ul><ol><li><a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a> 로 접속힌다.</li><li><code>Node.js LTS버전</code>을 다운 받는다.</li><li>다운받은 <code>Node.js LTS버전</code>을 설치한다.</li><li><code>crtl+r</code>키를 누른 뒤 <code>cmd</code>를 실행시킵니다.</li><li>정상적인 설치확인을 위해 <code>node버전</code>과 <code>npm버전</code>을 확인합니다.<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; node -v</span><br><span class="line">&gt; npm -v</span><br></pre></td></tr></table></figure></li></ol><blockquote><h2 id="github-Repository-생성"><a href="#github-Repository-생성" class="headerlink" title="github Repository 생성"></a><strong>github Repository 생성</strong></h2></blockquote><ol><li><a href="https://github.com/" target="_blank" rel="noopener">github</a>계정이 없다면, 가입합니다.</li><li><a href="https://github.com/" target="_blank" rel="noopener">github</a>에서 <code>New repository</code>를 클릭합니다.</li><li><code>Repository name</code>에 <code>사용자이름.github.io</code>를 입력합니다.</li><li>다른 설정은 그대로 둔 뒤, <code>Create repository</code>를 클릭합니다.</li></ol><p><br></p><h1 id="Hexo-설치"><a href="#Hexo-설치" class="headerlink" title="Hexo 설치"></a>Hexo 설치</h1><p><strong>본격적으로 Hexo를 설치합니다</strong></p><ol><li><code>crtl+r</code>키를 누른 뒤 <code>cmd</code>를 실행시킵니다.</li><li><p><code>Node.js</code>를 실행시킵니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; node</span><br></pre></td></tr></table></figure></li><li><p><code>npm</code>을 이용하여 <code>hexo-cli</code>를 설치합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>적당한 위치에 <code>원하는명(myblog)</code>을 가진 폴더를 만듭니다.</p></li><li><p><code>cd</code>명령어를 이용하여, 만든폴더의 위치로 이동합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; hexo init</span><br><span class="line">&gt; npm install</span><br></pre></td></tr></table></figure></li><li><p>현재(<code>root</code>)디렉토리에 있는<code>_config.yml</code>이라는 설정파일을 이용해 블로그의 대부분 설정을 할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">title: #블로그의 제목</span><br><span class="line">subtitle: #블로그의 부제목</span><br><span class="line">description: #블로그의 설명</span><br><span class="line">author: #블로그의 소유자</span><br><span class="line">language: ko #블로그의 언어 설정 </span><br><span class="line">timezone: Asia/Seoul #블로그의 시간 설정</span><br><span class="line"></span><br><span class="line">url: https://사용자 이름.github.io #블로그의 주소</span><br><span class="line"></span><br><span class="line">theme: #블로그의 테마 false이면 테마를 끕니다.</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/사용자이름/사용자이름.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p> 자세한 설정방법 : <a href="https://hexo.io/ko/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/ko/docs/configuration.html</a></p></li></ol><h1 id="블로그-글-작성하기"><a href="#블로그-글-작성하기" class="headerlink" title="블로그 글 작성하기"></a>블로그 글 작성하기</h1><ol><li><p><code>hexo new [layout] &lt;title&gt;</code>명령어를 이용하여 새 글 작성을 위한 파일 만들기. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; hexo new &quot;첫글&quot;</span><br></pre></td></tr></table></figure></li><li><p><code>/source/_posts/첫글.md</code> 열어서 작성하기.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &apos;첫글&apos;   #글 제목 지정</span><br><span class="line">date:           #시간 지정</span><br><span class="line">tags:           #태그 지정</span><br><span class="line">categories:     #카테고리 지정</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># Hello World</span><br><span class="line">## Hello World</span><br><span class="line">### Hello World</span><br></pre></td></tr></table></figure></li><li><p><code>hexo g</code>명령어를 사용하여, 정적 파일 생성.</p></li><li><code>hexo s</code>명령어를 사용하여, 로컬 서버 구동하기.</li><li><p>정상적으로 글 확인을 위해, 브라우저를 통해 접속.(기본:<code>http://localhost:4000/</code>)</p><p> <code>Hexo명령어</code> : <a href="https://hexo.io/ko/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/ko/docs/commands.html</a></p></li></ol>]]></content>
      
      <categories>
          
          <category> git </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
